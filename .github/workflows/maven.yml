name: Publish package to the Maven Central Repository

on:
  push:
    branches:
      - 'uf-4249-temporary-test-branch'
  workflow_dispatch: {}

jobs:
  publish:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

      - name: Configure Git user and get release version
        run: |
          git config --global user.email ${{ secrets.USER_EMAIL }}
          git config --global user.name "Utvecklingsfabriken"

      - name: Prepare release with Maven
        env:
          MAVEN_USERNAME: ${"Utvecklingsfabriken"}
          MAVEN_PASSWORD: ${GITHUB_TOKEN}
        run: mvn -B -X release:prepare

      - name: Perform release with Maven
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        run: mvn -B -X release:perform -Darguments="-DskipTests"

      - name: "Get latest tag"
        id: latest_tag
        run:
          echo "TAG_NAME=$(git tag --sort=-creatordate | head -1)" >> $GITHUB_OUTPUT

      - name: "Build Changelog"
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@{latest-release}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ steps.latest_tag.outputs.TAG_NAME }}
          release_name: ${{ steps.latest_tag.outputs.TAG_NAME }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: true
          prerelease: true